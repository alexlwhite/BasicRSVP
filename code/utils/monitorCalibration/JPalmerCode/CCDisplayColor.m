function CCDisplayColor% CCDisplayColor% This PsychToolbox program displays a calibrated rgb color.  % Accurate color depends on a calibration file such as the example.  % For calibration, the key calls are:  CCGetCalibration,% CCMakeInverseGamma, and Screen's 'LoadNormalizedGammaTable'.% This program requires John Palmer's EX and CC routines.% for other color examples see RenderDemo in Psychtoolbox% 3/16/15   JP created CCDisplayColor% display parameters and calibration filemycolor  = [1 .5 .5];								% color in standardized RGB (0-1)size = 100;											% size of display in pixelscalibrationfile = 'VS95_090214.cal';                % calibration file (can also used 'default.cal' or 'unit.cal')% set values for OpenWindow callpixelsize = 32;                                     % use "full" color (32 bit mode)myscreen = 0;                                       % use 0 for single monitor systemsbackgroundSRGB = [.5,.5,.5];                        % calculations about color used "standardized" RGB (0-1)backroundRGB = round(255*backgroundSRGB);           % final calls to all display routines use integer RGB (0-255)% create graphics "window" for entire screen with a given background color and do other intializationwindow=Screen(myscreen,'OpenWindow',backroundRGB,[],pixelsize);	% [] arg causes default window size (entire screen)BackupCluts(myscreen);                              % save cluts (to be restored by sca)cal = CCGetCalibration(calibrationfile);            % get calibration infogammaInverse = CCMakeInverseGamma(cal);             % make Gamma correction array (inverse gamma)Screen('LoadNormalizedGammaTable', myscreen, gammaInverse);   % this loads the gamma correction into hardwareHideCursor;                                         % hide cursor during displaysListenChar(2);                                      % flush char buffer; remember to use cntrl-C if program aborts% display a colored rectanglerect = EXDefineRectangle(window,size,size,0,0);		% define rect for given size relative to center of windowScreen(window,'FillRect',round(mycolor*255),rect); 	% display the rectangleScreen(window,'DrawText','Press key when done',200,200,[0,0,0]);            % draw black textScreen(window,'Flip');                              % flip between two framebufferswhile KbCheck(-3) == 0; end;                        % wait until a key is pressed.% restore screen and keyboardsca;                                                % close windows, restore cluts, show cursor ListenChar(0);                                      % flush char buffer; remeber to use cntrl-C if program aborts